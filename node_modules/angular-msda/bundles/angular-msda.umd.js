(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/material/button'), require('@angular/material/input'), require('@angular/material/icon'), require('@angular/material/expansion'), require('@angular/material/select'), require('@angular/material/table'), require('@angular/material/paginator'), require('@angular/material/sort'), require('@angular/material/slide-toggle'), require('@angular/material/dialog'), require('@angular/material/sidenav'), require('@angular/material/checkbox'), require('@angular/material/stepper'), require('@angular/material/datepicker'), require('@angular/material'), require('@angular/material/chips'), require('@angular/material/tooltip'), require('@angular/material/menu'), require('@angular/material/progress-bar'), require('@angular/animations'), require('@angular/forms')) :
    typeof define === 'function' && define.amd ? define('angular-msda', ['exports', '@angular/core', '@angular/common', '@angular/material/button', '@angular/material/input', '@angular/material/icon', '@angular/material/expansion', '@angular/material/select', '@angular/material/table', '@angular/material/paginator', '@angular/material/sort', '@angular/material/slide-toggle', '@angular/material/dialog', '@angular/material/sidenav', '@angular/material/checkbox', '@angular/material/stepper', '@angular/material/datepicker', '@angular/material', '@angular/material/chips', '@angular/material/tooltip', '@angular/material/menu', '@angular/material/progress-bar', '@angular/animations', '@angular/forms'], factory) :
    (factory((global['angular-msda'] = {}),global.ng.core,global.ng.common,global.ng.material.button,global.ng.material.input,global.ng.material.icon,global.ng.material.expansion,global.ng.material.select,global.ng.material.table,global.ng.material.paginator,global.ng.material.sort,global.ng.material['slide-toggle'],global.ng.material.dialog,global.ng.material.sidenav,global.ng.material.checkbox,global.ng.material.stepper,global.ng.material.datepicker,global.ng.material,global.ng.material.chips,global.ng.material.tooltip,global.ng.material.menu,global.ng.material['progress-bar'],global.ng.animations,global.ng.forms));
}(this, (function (exports,core,common,button,input,icon,expansion,select,table,paginator,sort,slideToggle,dialog,sidenav,checkbox,stepper,datepicker,material,chips,tooltip,menu,progressBar,animations,forms) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MatModule = /** @class */ (function () {
        function MatModule() {
        }
        MatModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            // core modules
                            common.CommonModule,
                            // angular-material components modules
                            button.MatButtonModule,
                            input.MatInputModule,
                            icon.MatIconModule,
                            expansion.MatExpansionModule,
                            select.MatSelectModule,
                            table.MatTableModule,
                            paginator.MatPaginatorModule,
                            sort.MatSortModule,
                            slideToggle.MatSlideToggleModule,
                            dialog.MatDialogModule,
                            sidenav.MatSidenavModule,
                            checkbox.MatCheckboxModule,
                            stepper.MatStepperModule,
                            datepicker.MatDatepickerModule,
                            material.MatNativeDateModule,
                            chips.MatChipsModule,
                            tooltip.MatTooltipModule,
                            menu.MatMenuModule,
                            progressBar.MatProgressBarModule
                        ],
                        declarations: [],
                        exports: [
                            // core modules
                            common.CommonModule,
                            // angular-material components modules
                            button.MatButtonModule,
                            input.MatInputModule,
                            icon.MatIconModule,
                            expansion.MatExpansionModule,
                            select.MatSelectModule,
                            table.MatTableModule,
                            paginator.MatPaginatorModule,
                            sort.MatSortModule,
                            slideToggle.MatSlideToggleModule,
                            dialog.MatDialogModule,
                            sidenav.MatSidenavModule,
                            checkbox.MatCheckboxModule,
                            stepper.MatStepperModule,
                            datepicker.MatDatepickerModule,
                            material.MatNativeDateModule,
                            chips.MatChipsModule,
                            tooltip.MatTooltipModule,
                            menu.MatMenuModule,
                            progressBar.MatProgressBarModule
                        ]
                    },] }
        ];
        return MatModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MSDAIcon = /** @class */ (function () {
        function MSDAIcon(_elementRef) {
            this._elementRef = _elementRef;
            this._width = 24;
            this._height = 24;
            this._color = '#000000';
            this._shadowLevel = null;
        }
        Object.defineProperty(MSDAIcon.prototype, "name", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._name = value;
                this._updateName();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAIcon.prototype, "width", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._width = value;
                this._updateWidth();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAIcon.prototype, "height", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._height = value;
                this._updateHeight();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAIcon.prototype, "color", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._color = value;
                this._updateColor();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAIcon.prototype, "shadow", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._shadowLevel = value;
                this._updateShadow();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        MSDAIcon.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this._updateName();
                this._updateWidth();
                this._updateHeight();
                this._updateColor();
                this._updateShadow();
            };
        /**
         * @return {?}
         */
        MSDAIcon.prototype._updateName = /**
         * @return {?}
         */
            function () {
                if (this._name) {
                    this._useElementRef.nativeElement.setAttribute('href', "../../assets/icons.svg#" + this._name); // FIXME
                }
            };
        /**
         * @return {?}
         */
        MSDAIcon.prototype._updateWidth = /**
         * @return {?}
         */
            function () {
                if (this._width) {
                    this._elementRef.nativeElement.style.width = this._width + "px";
                    this._svgElementRef.nativeElement.setAttribute('width', this._width.toString());
                }
            };
        /**
         * @return {?}
         */
        MSDAIcon.prototype._updateHeight = /**
         * @return {?}
         */
            function () {
                if (this._height) {
                    this._elementRef.nativeElement.style.height = this._height + "px";
                    this._svgElementRef.nativeElement.setAttribute('height', this._height.toString());
                }
            };
        /**
         * @return {?}
         */
        MSDAIcon.prototype._updateColor = /**
         * @return {?}
         */
            function () {
                if (this._color) {
                    this._elementRef.nativeElement.style.height = this._height + "px";
                    this._svgElementRef.nativeElement.setAttribute('fill', this._color);
                }
            };
        /**
         * @return {?}
         */
        MSDAIcon.prototype._updateShadow = /**
         * @return {?}
         */
            function () {
                if (this._shadowLevel) {
                    this._svgElementRef.nativeElement.setAttribute('class', "msda-shadow-" + this._shadowLevel);
                }
            };
        MSDAIcon.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-icon',
                        template: "<svg #svg>\r\n    <use #use></use>\r\n</svg>\r\n",
                        encapsulation: core.ViewEncapsulation.None,
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: {
                            'role': 'img',
                            'class': 'msda-icon'
                        },
                        exportAs: 'MSDAIcon',
                        styles: [".msda-elevation-z2{box-shadow:0 2px 2px rgba(0,0,0,.2)}.msda-elevation-z4{box-shadow:0 4px 4px rgba(0,0,0,.1)}.msda-elevation-z4-underline{box-shadow:0 1px #e0e0e0,0 4px 4px rgba(0,0,0,.1)}.msda-border-top{box-shadow:0 -1px #e0e0e0}.msda-border-bottom{box-shadow:0 1px #e0e0e0}.msda-sidebar-element-hover{box-shadow:0 1px 1px rgba(0,0,0,.1)}.msda-body-1,.msda-body-1-bold,.msda-body-2,.msda-body-2-bold{color:#333;font-family:'BPG DejaVu Sans';letter-spacing:.1em}.msda-body-1 a,.msda-body-1-bold a,.msda-body-2 a,.msda-body-2-bold a{color:#3966a3}.msda-body-1 a:focus,.msda-body-1 a:hover,.msda-body-1-bold a:focus,.msda-body-1-bold a:hover,.msda-body-2 a:focus,.msda-body-2 a:hover,.msda-body-2-bold a:focus,.msda-body-2-bold a:hover{color:#777}.msda-body-1,.msda-body-1-bold{font-size:13px;line-height:21px}.msda-body-2,.msda-body-2-bold{font-size:11px;line-height:20px}.msda-body-1-bold,.msda-body-2-bold{font-weight:700}.msda-display-1,.msda-display-2,.msda-display-3{color:#333}.msda-display-1{font-size:15px;font-family:'BPG DejaVu Sans';font-weight:700;line-height:26px}.msda-display-1 a{color:#3966a3}.msda-display-1 a:focus,.msda-display-1 a:hover{color:#777}.msda-display-2,.msda-display-3{font-family:'BPG DejaVu Sans Caps Web';text-transform:uppercase}.msda-display-2{font-size:13px}.msda-display-3{font-size:11px;letter-spacing:.1em}.msda-shadow-1{-webkit-filter:drop-shadow(1px 1px 2px rgba(0, 0, 0, .5));filter:drop-shadow(1px 1px 2px rgba(0, 0, 0, .5))}.msda-shadow-2{-webkit-filter:drop-shadow(1px 1px 4px rgba(0, 0, 0, .5));filter:drop-shadow(1px 1px 4px rgba(0, 0, 0, .5))}.msda-shadow-3{-webkit-filter:drop-shadow(1px 1px 6px rgba(0, 0, 0, .5));filter:drop-shadow(1px 1px 6px rgba(0, 0, 0, .5))}.msda-icon{background-repeat:no-repeat;display:inline-block;fill:#000;height:24px;width:24px}"]
                    }] }
        ];
        /** @nocollapse */
        MSDAIcon.ctorParameters = function () {
            return [
                { type: core.ElementRef }
            ];
        };
        MSDAIcon.propDecorators = {
            name: [{ type: core.Input, args: ['name',] }],
            width: [{ type: core.Input, args: ['width',] }],
            height: [{ type: core.Input, args: ['height',] }],
            color: [{ type: core.Input, args: ['color',] }],
            shadow: [{ type: core.Input, args: ['shadow',] }],
            _svgElementRef: [{ type: core.ViewChild, args: ['svg',] }],
            _useElementRef: [{ type: core.ViewChild, args: ['use',] }]
        };
        return MSDAIcon;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MSDAPlateIcon = /** @class */ (function () {
        function MSDAPlateIcon(_elementRef) {
            this._elementRef = _elementRef;
            this._width = 24;
            this._height = 24;
            this._color = '#FFFFFF';
            this._background = '#EA854D';
            this._shadow = null;
        }
        Object.defineProperty(MSDAPlateIcon.prototype, "name", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._name = value;
                this._updateName();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAPlateIcon.prototype, "width", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._width = value;
                this._updateWidth();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAPlateIcon.prototype, "height", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._height = value;
                this._updateHeight();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAPlateIcon.prototype, "color", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._color = value;
                this._updateColor();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAPlateIcon.prototype, "background", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._background = value;
                this._updateBackground();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAPlateIcon.prototype, "shadow", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._shadow = value;
                this._updateShadow();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MSDAPlateIcon.prototype, "type", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._type = value;
                this._updateType();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        MSDAPlateIcon.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this._updateName();
                this._updateWidth();
                this._updateHeight();
                this._updateColor();
                this._updateBackground();
                this._updateShadow();
                this._updateType();
            };
        /**
         * @return {?}
         */
        MSDAPlateIcon.prototype._updateName = /**
         * @return {?}
         */
            function () {
                if (this._name) {
                    this._iconRef.name = this._name;
                }
            };
        /**
         * @return {?}
         */
        MSDAPlateIcon.prototype._updateWidth = /**
         * @return {?}
         */
            function () {
                if (this._width) {
                    this._wrapperRef.nativeElement.style.width = this._width + 'px';
                    this._backgroundRef.width = this._width;
                    this._iconRef.width = this._width - (this._width / 3);
                }
            };
        /**
         * @return {?}
         */
        MSDAPlateIcon.prototype._updateHeight = /**
         * @return {?}
         */
            function () {
                if (this._height) {
                    this._wrapperRef.nativeElement.style.height = this._height + 'px';
                    this._backgroundRef.height = this._height;
                    this._iconRef.height = this._height - (this._height / 3);
                }
            };
        /**
         * @return {?}
         */
        MSDAPlateIcon.prototype._updateColor = /**
         * @return {?}
         */
            function () {
                if (this._color) {
                    this._iconRef.color = this._color;
                }
            };
        /**
         * @return {?}
         */
        MSDAPlateIcon.prototype._updateBackground = /**
         * @return {?}
         */
            function () {
                if (this._background) {
                    this._backgroundRef.color = this._background;
                }
            };
        /**
         * @return {?}
         */
        MSDAPlateIcon.prototype._updateShadow = /**
         * @return {?}
         */
            function () {
                if (this._shadow) {
                    this._backgroundRef.shadow = this._shadow;
                }
            };
        /**
         * @return {?}
         */
        MSDAPlateIcon.prototype._updateType = /**
         * @return {?}
         */
            function () {
                if (this._type) {
                    this._backgroundRef.name = this._type;
                }
            };
        MSDAPlateIcon.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-plate-icon',
                        template: "<div #wrapper class=\"wrapper\">\r\n    <msda-icon #background style=\"position: absolute; top: 0; left: 0; z-index: -1;\"></msda-icon>\r\n    <msda-icon #icon style=\"z-index: 1;\"></msda-icon>\r\n</div>\r\n",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: {
                            'role': 'img',
                            'class': 'msda-plate-icon'
                        },
                        exportAs: 'MSDAPlateIcon',
                        styles: [".wrapper{position:relative;width:48px;height:48px;display:flex;align-items:center;justify-content:center}"]
                    }] }
        ];
        /** @nocollapse */
        MSDAPlateIcon.ctorParameters = function () {
            return [
                { type: core.ElementRef }
            ];
        };
        MSDAPlateIcon.propDecorators = {
            name: [{ type: core.Input, args: ['name',] }],
            width: [{ type: core.Input, args: ['width',] }],
            height: [{ type: core.Input, args: ['height',] }],
            color: [{ type: core.Input, args: ['color',] }],
            background: [{ type: core.Input, args: ['background',] }],
            shadow: [{ type: core.Input, args: ['shadow',] }],
            type: [{ type: core.Input, args: ['type',] }],
            _wrapperRef: [{ type: core.ViewChild, args: ['wrapper',] }],
            _backgroundRef: [{ type: core.ViewChild, args: ['background',] }],
            _iconRef: [{ type: core.ViewChild, args: ['icon',] }]
        };
        return MSDAPlateIcon;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MSDACardButton = /** @class */ (function () {
        function MSDACardButton() {
            this.icon = 'icon-4';
            this.iconType = 'square';
            this.iconColor = '#FFFFFF';
            this.iconBackgroundColor = '#EA854D';
            this.draggable = true;
            this.buttonClick = new core.EventEmitter();
        }
        /**
         * @param {?} e
         * @return {?}
         */
        MSDACardButton.prototype.hostClick = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                this.buttonClick.emit(e);
            };
        /**
         * @param {?} e
         * @return {?}
         */
        MSDACardButton.prototype.moveHandlerClick = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
            };
        MSDACardButton.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-card-button',
                        exportAs: 'MSDACardButton',
                        template: "<div class=\"msda-card-button-header\">\r\n  <div class=\"msda-card-button-title\">{{ title }}</div>\r\n  <div class=\"msda-card-button-move-handler\" (click)=\"moveHandlerClick($event)\" *ngIf=\"draggable\">\r\n    <svg width=\"16\" height=\"10\" viewBox=\"0 0 16 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M14 6C15.1 6 16 6.9 16 8C16 9.1 15.1 10 14 10C12.9 10 12 9.1 12 8C12 6.9 12.9 6 14 6ZM6 8C6 9.1 6.9 10 8 10C9.1 10 10 9.1 10 8C10 6.9 9.1 6 8 6C6.9 6 6 6.9 6 8ZM0 8C0 9.1 0.9 10 2 10C3.1 10 4 9.1 4 8C4 6.9 3.1 6 2 6C0.9 6 0 6.9 0 8ZM4 2C4 0.9 3.1 0 2 0C0.9 0 0 0.9 0 2C0 3.1 0.9 4 2 4C3.1 4 4 3.1 4 2ZM6 2C6 3.1 6.9 4 8 4C9.1 4 10 3.1 10 2C10 0.9 9.1 0 8 0C6.9 0 6 0.9 6 2ZM12 2C12 3.1 12.9 4 14 4C15.1 4 16 3.1 16 2C16 0.9 15.1 0 14 0C12.9 0 12 0.9 12 2Z\" fill=\"black\" />\r\n    </svg>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"msda-card-button-body\">\r\n  <msda-plate-icon [name]=\"icon\" [type]=\"iconType\" width=\"48\" height=\"48\" [color]=\"iconColor\" [background]=\"iconBackgroundColor\"></msda-plate-icon>\r\n  <div class=\"msda-card-button-text\">{{ text }}</div>\r\n</div>\r\n",
                        encapsulation: core.ViewEncapsulation.None,
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: {
                            'class': 'msda-card-button',
                            '(click)': 'hostClick($event)'
                        },
                        styles: [".msda-card-button,.msda-card-button-body{border-radius:0 0 8px 8px}.msda-card-button{display:flex;flex-direction:column;background:#f7f7fa;box-shadow:0 2px 2px rgba(0,0,0,.2);cursor:pointer}.msda-card-button:hover .msda-card-button-header .msda-card-button-move-handler{opacity:1;visibility:visible}.msda-card-button .msda-card-button-body,.msda-card-button .msda-card-button-header{padding:12px 24px}.msda-card-button .msda-card-button-body .msda-card-button-text,.msda-card-button .msda-card-button-header .msda-card-button-title{font-size:11px;line-height:20px;letter-spacing:.01em;color:#333}.msda-card-button .msda-card-button-header{display:flex;align-items:center;position:relative;background:#f0f0f7;box-shadow:0 1px 0 #e0e0e0;z-index:1}.msda-card-button .msda-card-button-header .msda-card-button-title{flex:1 1 auto;font-family:BPG DejaVu Sans Caps Web}.msda-card-button .msda-card-button-header .msda-card-button-move-handler{cursor:move;opacity:0;visibility:hidden;transition-property:opacity,visibility;transition-duration:.2s}.msda-card-button .msda-card-button-body{flex:1 1 auto;display:flex;flex-direction:row;align-items:center}.msda-card-button .msda-card-button-body .msda-card-button-text{margin-left:16px;font-family:BPG DejaVu Sans}.msda-card-button-placeholder,.sortable-placeholder{min-height:112px;border:2px dashed #333;border-radius:0 0 8px 8px}"]
                    }] }
        ];
        MSDACardButton.propDecorators = {
            title: [{ type: core.Input }],
            text: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            iconType: [{ type: core.Input }],
            iconColor: [{ type: core.Input }],
            iconBackgroundColor: [{ type: core.Input }],
            draggable: [{ type: core.Input }],
            buttonClick: [{ type: core.Output }]
        };
        return MSDACardButton;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MSDACardButtonsContainer = /** @class */ (function () {
        function MSDACardButtonsContainer(_el) {
            this._el = _el;
            this.row = 3;
            this.column = 3;
            this.dragEnabled = false;
            this.dataSource = [];
            this.sortupdate = new core.EventEmitter();
            this.buttonClick = new core.EventEmitter();
        }
        Object.defineProperty(MSDACardButtonsContainer.prototype, "gridTemplateColumns", {
            get: /**
             * @return {?}
             */ function () {
                return '1fr '.repeat(this.column).trim();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        MSDACardButtonsContainer.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.dragEnabled) {
                    jQuery('.msda-card-buttons-container-inner', this._el.nativeElement).sortable({
                        handle: '.msda-card-button-move-handler'
                    }).bind('sortupdate', function (event, ui) {
                        _this.sortupdate.emit({ event: event, ui: ui });
                    });
                }
            };
        MSDACardButtonsContainer.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-card-buttons-container',
                        exportAs: 'MSDACardButtonsContainer',
                        template: "<div class=\"msda-card-buttons-container-inner\" [style.grid-template-columns]=\"gridTemplateColumns\">\r\n  <ng-template ngFor let-item [ngForOf]=\"dataSource\">\r\n    <msda-card-button [title]=\"item.title\" [text]=\"item.text\" [icon]=\"item.icon\" [iconType]=\"item.iconType\" [iconBackgroundColor]=\"item.iconBackgroundColor\" (buttonClick)=\"buttonClick.emit($event)\"></msda-card-button>\r\n  </ng-template>\r\n</div>\r\n",
                        encapsulation: core.ViewEncapsulation.None,
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: {
                            'role': 'button',
                            'class': 'msda-card-buttons-container'
                        },
                        styles: [".msda-card-buttons-container{overflow:hidden}.msda-card-buttons-container-inner{display:-ms-grid;display:grid;margin-top:10px;margin-bottom:10px;gap:10px 24px}"]
                    }] }
        ];
        /** @nocollapse */
        MSDACardButtonsContainer.ctorParameters = function () {
            return [
                { type: core.ElementRef }
            ];
        };
        MSDACardButtonsContainer.propDecorators = {
            row: [{ type: core.Input }],
            column: [{ type: core.Input }],
            dragEnabled: [{ type: core.Input }],
            dataSource: [{ type: core.Input }],
            sortupdate: [{ type: core.Output }],
            buttonClick: [{ type: core.Output }]
        };
        return MSDACardButtonsContainer;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MSDABannerButton = /** @class */ (function () {
        function MSDABannerButton() {
            /**
             * Read more text
             */
            this.readMoreText = 'ვრცლად ...';
            /**
             * Button click event emitter
             */
            this.buttonClick = new core.EventEmitter();
        }
        MSDABannerButton.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-banner-button',
                        exportAs: 'MSDABannerButton',
                        template: "<img class=\"msda-banner-button-image\" [src]=\"image\" alt=\"\">\r\n<msda-plate-icon class=\"msda-banner-button-icon\" [name]=\"icon\" type=\"square\" width=\"48\" height=\"48\" color=\"#FFFFFF\" [background]=\"color\"></msda-plate-icon>\r\n<div class=\"msda-banner-button-header\">\r\n  <span class=\"msda-banner-button-title msda-display-2\">{{ title }}</span>\r\n  <span class=\"msda-banner-button-date\">{{ date }}</span>\r\n</div>\r\n<p class=\"msda-banner-button-text msda-body-1\">{{ text }}</p>\r\n<a class=\"msda-banner-button-read-more\" href=\"javascript:;\" (click)=\"buttonClick.emit($event)\">\r\n  <svg width=\"24\" height=\"25\" viewBox=\"0 0 24 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 4.25437C7.58172 4.25437 4 7.81069 4 12.1976C4 16.5846 7.58172 20.1409 12 20.1409C16.4183 20.1409 20 16.5846 20 12.1976C20 7.81069 16.4183 4.25437 12 4.25437ZM2 12.1976C2 6.71395 6.47715 2.26855 12 2.26855C17.5228 2.26855 22 6.71395 22 12.1976C22 17.6813 17.5228 22.1267 12 22.1267C6.47715 22.1267 2 17.6813 2 12.1976Z\" [attr.fill]=\"color\" />\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.2929 7.92168C11.6834 7.53392 12.3166 7.53392 12.7071 7.92168L16.3071 11.4961C16.6976 11.8839 16.6976 12.5126 16.3071 12.9003L12.7071 16.4748C12.3166 16.8625 11.6834 16.8625 11.2929 16.4748C10.9024 16.087 10.9024 15.4584 11.2929 15.0706L14.1858 12.1982L11.2929 9.32586C10.9024 8.9381 10.9024 8.30943 11.2929 7.92168Z\" [attr.fill]=\"color\" />\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.40039 12.198C7.40039 11.6496 7.84811 11.2051 8.40039 11.2051H15.6004C16.1527 11.2051 16.6004 11.6496 16.6004 12.198C16.6004 12.7464 16.1527 13.1909 15.6004 13.1909H8.40039C7.84811 13.1909 7.40039 12.7464 7.40039 12.198Z\" [attr.fill]=\"color\" />\r\n  </svg>\r\n  <span>{{ readMoreText }}</span>\r\n</a>\r\n",
                        encapsulation: core.ViewEncapsulation.None,
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: { 'class': 'msda-banner-button msda-body-2' },
                        styles: [".msda-banner-button{display:block;position:relative;background-color:#fff;border-radius:0 0 8px 8px;box-shadow:0 2px 2px rgba(0,0,0,.2)}.msda-banner-button-image{width:100%;margin-bottom:20px}.msda-banner-button-icon{position:absolute;top:24px;left:24px}.msda-banner-button-date{color:#777}.msda-banner-button-header,.msda-banner-button-read-more,.msda-banner-button-text{margin-left:24px;margin-right:24px}.msda-banner-button-header{display:flex;justify-content:space-between}.msda-banner-button-read-more{margin-bottom:24px;text-decoration:none;display:inline-flex;align-items:center}.msda-banner-button-read-more span{margin-left:10px}"]
                    }] }
        ];
        MSDABannerButton.propDecorators = {
            icon: [{ type: core.Input }],
            image: [{ type: core.Input }],
            title: [{ type: core.Input }],
            text: [{ type: core.Input }],
            date: [{ type: core.Input }],
            color: [{ type: core.Input }],
            readMoreText: [{ type: core.Input }],
            buttonClick: [{ type: core.Output }]
        };
        return MSDABannerButton;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MSDAPaginator = /** @class */ (function () {
        function MSDAPaginator() {
            this.page = new core.EventEmitter();
            this.pageConfigChange = new core.EventEmitter();
            this.currentPageIndex = 1;
            this._pageEventData = {
                pageIndex: this.currentPageIndex,
                pageSize: null
            };
        }
        /**
         * @return {?}
         */
        MSDAPaginator.prototype.ngOnChanges = /**
         * @return {?}
         */
            function () {
                this.numberOfTotalPages = Math.ceil(this.totalItems / this.itemsPerPage);
                this._pageEventData['pageSize'] = this.itemsPerPageConfig[0];
            };
        /**
         * @return {?}
         */
        MSDAPaginator.prototype.nextPage = /**
         * @return {?}
         */
            function () {
                if (this.currentPageIndex < this.numberOfTotalPages) {
                    this._pageEventData['pageIndex'] = ++this.currentPageIndex;
                    this.page.emit(this._pageEventData);
                }
            };
        /**
         * @return {?}
         */
        MSDAPaginator.prototype.previousPage = /**
         * @return {?}
         */
            function () {
                if (this.currentPageIndex > 1) {
                    this._pageEventData['pageIndex'] = --this.currentPageIndex;
                    this.page.emit(this._pageEventData);
                }
            };
        /**
         * @return {?}
         */
        MSDAPaginator.prototype.moveToTheRequestedPage = /**
         * @return {?}
         */
            function () {
                if (this.currentPageIndex >= 1 && this.currentPageIndex <= this.numberOfTotalPages) {
                    this._pageEventData['pageIndex'] = this.currentPageIndex;
                    this.page.emit(this._pageEventData);
                }
            };
        /**
         * @param {?} e
         * @return {?}
         */
        MSDAPaginator.prototype.onSelectionChange = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                this.itemsPerPage = parseInt(e.srcElement['value'], 10);
                this._pageEventData['pageSize'] = this.itemsPerPage;
                this.numberOfTotalPages = Math.ceil(this.totalItems / this.itemsPerPage);
                this.page.emit(this._pageEventData);
                this.pageConfigChange.emit(this.itemsPerPage);
            };
        MSDAPaginator.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-paginator',
                        exportAs: 'MSDAPaginator',
                        template: "<div id=\"container\" class=\"msda-body-2\">\r\n    <span>\u10E1\u10E3\u10DA \u10E9\u10D0\u10DC\u10D0\u10EC\u10D4\u10E0\u10D4\u10D1\u10D8: {{totalItems}}</span>\r\n\r\n    <div id=\"right-end\">\r\n        <div id=\"select-number-of-records\">\r\n            <span>\u10D2\u10D5\u10D4\u10E0\u10D3\u10D6\u10D4 \u10E9\u10D0\u10DC\u10D0\u10EC\u10D4\u10E0\u10D4\u10D1\u10D8\u10E1 \u10E0\u10D0\u10DD\u10D3\u10D4\u10DC\u10DD\u10D1\u10D0: </span>\r\n\r\n            <select (change)=\"onSelectionChange($event)\" class=\"msda-body-2\">\r\n                <option *ngFor=\"let item of itemsPerPageConfig\" [value]=\"item\">\r\n                    {{item}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n\r\n        <div id=\"paging-navigation\">\r\n            <msda-icon name=\"chevron_left\"\r\n                       [color]=\"currentPageIndex <= 1? '#CCCEE0' : '#000000'\"\r\n                       [ngStyle]=\"{'cursor': currentPageIndex === 1? 'not-allowed' : 'pointer'}\"\r\n                       (click)=\"previousPage()\">\r\n            </msda-icon>\r\n\r\n            <div id=\"current-page-index-indicator\">\r\n                <input class=\"msda-body-2\" *ngIf=\"numberOfTotalPages > 2; else withoutInputField\"\r\n                       type=\"number\"\r\n                       [(ngModel)]=\"currentPageIndex\"\r\n                       (input)=\"moveToTheRequestedPage()\">\r\n                <ng-template #withoutInputField>\r\n                    <span>{{currentPageIndex}}</span>\r\n                </ng-template>\r\n            </div>\r\n            \r\n            <div id=\"total-number-of-pages\" class=\"msda-body-2\"> - {{numberOfTotalPages}}</div>\r\n\r\n            <msda-icon name=\"chevron_right\"\r\n                       [color]=\"currentPageIndex >= numberOfTotalPages? '#CCCEE0' : '#000000'\"\r\n                       [ngStyle]=\"{'cursor': currentPageIndex === numberOfTotalPages? 'not-allowed' : 'pointer'}\"\r\n                       (click)=\"nextPage()\">\r\n            </msda-icon>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                        styles: [".msda-elevation-z2{box-shadow:0 2px 2px rgba(0,0,0,.2)}.msda-elevation-z4{box-shadow:0 4px 4px rgba(0,0,0,.1)}.msda-elevation-z4-underline{box-shadow:0 1px #e0e0e0,0 4px 4px rgba(0,0,0,.1)}.msda-border-top{box-shadow:0 -1px #e0e0e0}.msda-border-bottom{box-shadow:0 1px #e0e0e0}.msda-sidebar-element-hover{box-shadow:0 1px 1px rgba(0,0,0,.1)}.msda-body-1,.msda-body-1-bold,.msda-body-2,.msda-body-2-bold{color:#333;font-family:'BPG DejaVu Sans';letter-spacing:.1em}.msda-body-1 a,.msda-body-1-bold a,.msda-body-2 a,.msda-body-2-bold a{color:#3966a3}.msda-body-1 a:focus,.msda-body-1 a:hover,.msda-body-1-bold a:focus,.msda-body-1-bold a:hover,.msda-body-2 a:focus,.msda-body-2 a:hover,.msda-body-2-bold a:focus,.msda-body-2-bold a:hover{color:#777}.msda-body-1,.msda-body-1-bold{font-size:13px;line-height:21px}.msda-body-2,.msda-body-2-bold{font-size:11px;line-height:20px}.msda-body-1-bold,.msda-body-2-bold{font-weight:700}.msda-display-1,.msda-display-2,.msda-display-3{color:#333}.msda-display-1{font-size:15px;font-family:'BPG DejaVu Sans';font-weight:700;line-height:26px}.msda-display-1 a{color:#3966a3}.msda-display-1 a:focus,.msda-display-1 a:hover{color:#777}.msda-display-2,.msda-display-3{font-family:'BPG DejaVu Sans Caps Web';text-transform:uppercase}.msda-display-2{font-size:13px}.msda-display-3{font-size:11px;letter-spacing:.1em}#container{display:flex;flex-direction:row;align-items:center;justify-content:space-between;background-color:#fff;box-shadow:0 1px 0 #e0e0e0;padding:8px 24px;color:#777}#container #right-end{display:flex;flex-direction:row;align-items:center}#container #right-end #select-number-of-records select{border:none;color:#777}#container #right-end #paging-navigation{display:flex;flex-direction:row;align-items:center;margin-left:70px}#container #right-end #paging-navigation msda-icon{cursor:pointer}#container #right-end #paging-navigation #current-page-index-indicator{margin:0 0 0 30px;font-weight:700}#container #right-end #paging-navigation input[type=number]{background-color:#f7f7fa;border-radius:2px;border:none;padding:10px 12px;box-sizing:border-box;width:64px;font-weight:700}#container #right-end #paging-navigation input[type=number]::-webkit-inner-spin-button,#container #right-end #paging-navigation input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}#container #right-end #paging-navigation #total-number-of-pages{margin:0 30px 0 4px;color:#777}"]
                    }] }
        ];
        /** @nocollapse */
        MSDAPaginator.ctorParameters = function () { return []; };
        MSDAPaginator.propDecorators = {
            itemsPerPage: [{ type: core.Input }],
            totalItems: [{ type: core.Input }],
            itemsPerPageConfig: [{ type: core.Input }],
            page: [{ type: core.Output }],
            pageConfigChange: [{ type: core.Output }]
        };
        return MSDAPaginator;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MSDAMenuButton = /** @class */ (function () {
        function MSDAMenuButton() {
            this.click = new core.EventEmitter();
        }
        /**
         * @param {?} e
         * @return {?}
         */
        MSDAMenuButton.prototype.onClick = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                event.stopPropagation();
                this.click.next(e);
            };
        MSDAMenuButton.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-menu-button',
                        exportAs: 'MSDAMenuButton',
                        template: "<div class=\"msda-menu-button-body\">\r\n    <button class=\"button\" (click)=\"onClick($event)\">\r\n        <span class=\"block\"></span>\r\n        <span *ngIf=\"active\" class=\"block-active\"></span>\r\n        <span *ngIf=\"notifCounter\" class=\"badge msda-body-2-bold\">{{notifCounter < 100 ? notifCounter : '!'}}</span>\r\n        <span class=\"content msda-display-2\">\r\n            <ng-content></ng-content>\r\n        </span>\r\n    </button>\r\n</div>\r\n",
                        styles: [".button{position:relative;height:50px;padding-left:40px;padding-right:30px;border:none;cursor:pointer;background-color:#f6f6f6;font-size:20px;outline:0}.button:hover .block{display:block}.content{font-family:BPG DejaVu Sans Caps Web}.badge{position:absolute;height:18px;width:24px;color:#fff;background:#e3515a;border:1px solid #fff;box-sizing:border-box;border-radius:4px;line-height:18px;text-align:center;letter-spacing:.01em;top:5px;right:12px}.block{display:none;position:absolute;height:8px;width:8px;color:#fff;background-color:#000;padding-top:1px;top:20px;left:25px}.block-active{position:absolute;height:8px;width:8px;color:#fff;background-color:#000;padding-top:1px;top:20px;left:25px}"]
                    }] }
        ];
        MSDAMenuButton.propDecorators = {
            active: [{ type: core.Input, args: ['active',] }],
            text: [{ type: core.Input, args: ['text',] }],
            notifCounter: [{ type: core.Input, args: ['notifCounter',] }],
            click: [{ type: core.Output }]
        };
        return MSDAMenuButton;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var ButtonComponent = /** @class */ (function () {
        function ButtonComponent() {
            this.type = 'button';
            this.disabled = false;
            this.click = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        ButtonComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @param {?} e
         * @return {?}
         */
        ButtonComponent.prototype.onClick = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                this.click.emit(e);
            };
        ButtonComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-button',
                        template: "<button class=\"button\" [type]=\"type\" [style.backgroundColor]=\"color\" [disabled]=\"disabled\" (click)=\"onClick($event)\">\r\n  <span class=\"loader\" *ngIf=\"showLoading\"></span>\r\n  <span class=\"content\">\r\n       <!-- icon -->\r\n    <span class=\"icon\">\r\n            <ng-content select=\"msda-icon\"></ng-content>\r\n        </span>\r\n    <!-- text -->\r\n    <span class=\"text\">\r\n            <ng-content select=\"span\"></ng-content>\r\n        </span>\r\n</span>\r\n</button>\r\n\r\n\r\n\r\n<h1>\r\n  ////////////////////////////////TEST--\r\n</h1>\r\n\r\n\r\n<button mat-button>Click me!</button>\r\n\r\n<mat-chip-list aria-label=\"Fish selection\">\r\n  <mat-chip>One fish</mat-chip>\r\n  <mat-chip>Two fish</mat-chip>\r\n  <mat-chip color=\"primary\" selected>Primary fish</mat-chip>\r\n  <mat-chip color=\"accent\" selected>Accent fish</mat-chip>\r\n</mat-chip-list>\r\n",
                        styles: [".button{background-color:#212121;outline:0;border:none;border-radius:4px;color:#fff;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:145px;padding:0 36px;line-height:36px;font-size:14px;cursor:pointer;position:relative}.button .content{display:flex;align-items:center;justify-content:center}.button .content .icon ::ng-deep msda-icon{margin-right:8px;vertical-align:text-bottom}.button .content .text span{font-family:BPG DejaVu Sans Caps Web;font-size:11px;text-align:center;letter-spacing:.01em;color:#fff}::ng-deep .button:disabled{background-color:rgba(0,0,0,.12)!important;color:rgba(0,0,0,.38);cursor:default}.loader{position:absolute;top:0;bottom:0;left:5px;margin:auto;border:3px solid #f3f3f3;border-top:3px solid #3498db;border-radius:50%;width:18px;height:18px;-webkit-animation:2s linear infinite spin;animation:2s linear infinite spin}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}"]
                    }] }
        ];
        /** @nocollapse */
        ButtonComponent.ctorParameters = function () { return []; };
        ButtonComponent.propDecorators = {
            type: [{ type: core.Input }],
            color: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            showLoading: [{ type: core.Input }],
            click: [{ type: core.Output }]
        };
        return ButtonComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MSDAToast = /** @class */ (function () {
        function MSDAToast() {
            this.linkClick = new core.EventEmitter();
        }
        /**
         * @param {?} e
         * @return {?}
         */
        MSDAToast.prototype.click = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                if ((( /** @type {?} */(e.target))).classList.contains('msda-link'))
                    this.linkClick.emit(e);
            };
        MSDAToast.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-toast',
                        template: "<div class=\"msda-toast\">\r\n  <div class=\"msda-toast-html msda-body-1-bold\" [innerHTML]=\"html\"></div>\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" (click)=\"dismiss()\">\r\n    <g opacity=\"0.54\">\r\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.7071 5.29289C19.0976 5.68342 19.0976 6.31658 18.7071 6.70711L6.70711 18.7071C6.31658 19.0976 5.68342 19.0976 5.29289 18.7071C4.90237 18.3166 4.90237 17.6834 5.29289 17.2929L17.2929 5.29289C17.6834 4.90237 18.3166 4.90237 18.7071 5.29289Z\" fill=\"white\" />\r\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z\" fill=\"white\" />\r\n    </g>\r\n  </svg>\r\n</div>\r\n",
                        encapsulation: core.ViewEncapsulation.None,
                        exportAs: 'MSDAToas',
                        styles: [".msda-toast{color:#fff;padding:20px 24px;background-color:#212121;border-radius:4px;position:fixed;left:32px;bottom:64px;z-index:9999;display:flex;align-items:center}.msda-toast .msda-link,.msda-toast svg{cursor:pointer}.msda-toast svg{margin-left:20px}.msda-toast .msda-link{color:#a3bfe5}.msda-toast .msda-toast-html.msda-body-1-bold{color:#fff;letter-spacing:.01em}"]
                    }] }
        ];
        /** @nocollapse */
        MSDAToast.ctorParameters = function () { return []; };
        MSDAToast.propDecorators = {
            html: [{ type: core.Input }],
            dismiss: [{ type: core.Input }],
            linkClick: [{ type: core.Output }],
            click: [{ type: core.HostListener, args: ['click', ['$event'],] }]
        };
        return MSDAToast;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var MSDAToastConfig = /** @class */ (function () {
        function MSDAToastConfig() {
            this.onClose = function () { };
            this.linkClick = function (e) { };
            this.closeAfter = 3000;
        }
        return MSDAToastConfig;
    }());
    var MSDAToastService = /** @class */ (function () {
        function MSDAToastService(componentFactoryResolver, appRef, injector) {
            this.componentFactoryResolver = componentFactoryResolver;
            this.appRef = appRef;
            this.injector = injector;
        }
        /**
         * @param {?} html
         * @param {?=} userConfig
         * @return {?}
         */
        MSDAToastService.prototype.showHtml = /**
         * @param {?} html
         * @param {?=} userConfig
         * @return {?}
         */
            function (html, userConfig) {
                var _this = this;
                /** @type {?} */
                var config = __assign({}, new MSDAToastConfig(), userConfig);
                // 1. Create a component reference from the component
                this._componentRef = this.componentFactoryResolver
                    .resolveComponentFactory(MSDAToast)
                    .create(this.injector);
                this._componentRef.instance.html = html;
                this._componentRef.instance.linkClick.subscribe(function (e) { return config.linkClick(e); });
                this._componentRef.instance.dismiss = function () {
                    _this._componentRef.instance.linkClick.unsubscribe();
                    _this.appRef.detachView(_this._componentRef.hostView);
                    _this._componentRef.destroy();
                    config.onClose();
                };
                // 2. Attach component to the appRef so that it's inside the ng component tree
                this.appRef.attachView(this._componentRef.hostView);
                // 3. Get DOM element from component
                /** @type {?} */
                var domElem = ( /** @type {?} */((( /** @type {?} */(this._componentRef.hostView)))
                    .rootNodes[0]));
                // 4. Append DOM element to the body
                document.body.appendChild(domElem);
                // 5. Wait some time and remove it from the component tree and from the DOM
                setTimeout(function () { return _this._componentRef.instance.dismiss(); }, config.closeAfter);
            };
        MSDAToastService.decorators = [
            { type: core.Injectable }
        ];
        /** @nocollapse */
        MSDAToastService.ctorParameters = function () {
            return [
                { type: core.ComponentFactoryResolver },
                { type: core.ApplicationRef },
                { type: core.Injector }
            ];
        };
        return MSDAToastService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var ModuleCardComponent = /** @class */ (function () {
        function ModuleCardComponent() {
            /**
             * card click event emitter
             */
            this.click = new core.EventEmitter();
            /**
             * remove icon click event emitter
             */
            this.remove = new core.EventEmitter();
            this.flip = 'inactive';
        }
        /**
         * @return {?}
         */
        ModuleCardComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @param {?} e
         * @return {?}
         */
        ModuleCardComponent.prototype.onClick = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                this.click.emit(e);
            };
        /**
         * @param {?} e
         * @return {?}
         */
        ModuleCardComponent.prototype.onRemove = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                this.remove.emit(e);
            };
        /**
         * @param {?} e
         * @return {?}
         */
        ModuleCardComponent.prototype.toggleFlip = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                this.flip = (this.flip == 'inactive') ? 'active' : 'inactive';
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        ModuleCardComponent.prototype.onMouseEnter = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                this.isHovered = true;
                this.flipBack();
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        ModuleCardComponent.prototype.onMouseLeave = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                this.isHovered = false;
                this.flipBack();
            };
        /**
         * @return {?}
         */
        ModuleCardComponent.prototype.flipBack = /**
         * @return {?}
         */
            function () {
                var _this = this;
                setTimeout(function () {
                    if (!_this.isHovered) {
                        _this.flip = 'inactive';
                    }
                }, 1000);
            };
        ModuleCardComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-module-card',
                        template: "<div class=\"card\" (click)=\"onClick($event)\">\r\n    <div class=\"content\">\r\n        <div class=\"flip-wrapper\">\r\n            <div class=\"icon flip-box\" [@flipState]=\"flip\">\r\n                <msda-plate-icon\r\n                    class=\"msda-module-card-icon side front\"\r\n                    [name]=\"icon\"\r\n                    type=\"circle\"\r\n                    width=\"56\"\r\n                    height=\"56\"\r\n                    color=\"#FFFFFF\"\r\n                    [background]=\"color\"\r\n                    (click)=\"toggleFlip($event)\">\r\n                </msda-plate-icon>\r\n\r\n                <msda-plate-icon\r\n                    class=\"msda-module-card-icon side back\"\r\n                    name=\"remove\"\r\n                    type=\"circle\"\r\n                    width=\"56\"\r\n                    height=\"56\"\r\n                    color=\"black\"\r\n                    background=\"#FFFFFF\"\r\n                    (click)=\"onRemove($event)\"\r\n                    (mouseenter)=\"onMouseEnter($event)\"\r\n                    (mouseleave)=\"onMouseLeave($event)\">\r\n                </msda-plate-icon>\r\n            </div>\r\n        </div>\r\n        <div class=\"title\">{{title}}</div>\r\n    </div>\r\n    <div class=\"warn\" *ngIf=\"warn\">\r\n        <msda-icon\r\n            name=\"warning\"\r\n            width=\"22\"\r\n            height=\"22\"\r\n            color=\"#E3515A\">\r\n        </msda-icon>\r\n    </div>\r\n</div>\r\n\r\n",
                        animations: [
                            animations.trigger('flipState', [
                                animations.state('active', animations.style({
                                    transform: 'rotateX(180deg)'
                                })),
                                animations.state('inactive', animations.style({
                                    transform: 'rotateX(0)',
                                })),
                                animations.transition('active => inactive', animations.animate('500ms ease-out')),
                                animations.transition('inactive => active', animations.animate('500ms ease-in'))
                            ])
                        ],
                        styles: [".card{position:relative;cursor:pointer}.card .content{overflow:hidden;border-radius:30px 8px 8px 30px;position:relative;display:inline-block;box-shadow:0 2px 2px rgba(0,0,0,.2)}.card .content:after{content:'';width:100px;border-radius:50%;position:absolute;left:-38px;top:-6px;height:70px;box-shadow:0 -1px 0 rgba(0,0,0,.2),-4px -2px 0 rgba(0,0,0,.2),1px 0 0 0 #fff,110px 0 0 68px #fff;background:0 0;z-index:-1}.card .content .icon{width:160px;height:56px}.card .content .icon msda-plate-icon{cursor:pointer}.card .content .title{position:absolute;left:50%;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);font-family:'BPG DejaVu Sans';line-height:20px;font-size:11px;letter-spacing:.01em}.card .warn{position:absolute;right:-10px;top:-10px}.flip-wrapper{-webkit-perspective:800px;perspective:800px}.flip-box{position:relative;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.side{position:absolute;-webkit-backface-visibility:hidden;backface-visibility:hidden;color:#fff;text-align:center;font-size:24px;font-weight:700;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.front{-webkit-transform:rotateX(0);transform:rotateX(0)}.back{-webkit-transform:rotateX(180deg);transform:rotateX(180deg)}"]
                    }] }
        ];
        /** @nocollapse */
        ModuleCardComponent.ctorParameters = function () { return []; };
        ModuleCardComponent.propDecorators = {
            icon: [{ type: core.Input }],
            color: [{ type: core.Input }],
            title: [{ type: core.Input }],
            warn: [{ type: core.Input }],
            click: [{ type: core.Output }],
            remove: [{ type: core.Output }]
        };
        return ModuleCardComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var IconLabelComponent = /** @class */ (function () {
        function IconLabelComponent() {
            /**
             * click event emitter
             */
            this.click = new core.EventEmitter();
            /**
             * remove icon click event emitter
             */
            this.remove = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        IconLabelComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @param {?} e
         * @return {?}
         */
        IconLabelComponent.prototype.onClick = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                this.click.emit(e);
            };
        /**
         * @param {?} e
         * @return {?}
         */
        IconLabelComponent.prototype.onRemove = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                this.remove.emit(e);
            };
        IconLabelComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'msda-icon-label',
                        template: "<div class=\"icon-label\" (click)=\"onClick($event)\">\r\n    <div class=\"icon-label-content\">\r\n        <div class=\"icon\">\r\n            <msda-icon\r\n                [name]=\"icon\"\r\n                width=\"18\"\r\n                height=\"18\"\r\n                [color]=\"color\">\r\n            </msda-icon>\r\n        </div>\r\n        <div class=\"text\">\r\n            <span [style.color]=\"color\">{{text}}</span>\r\n        </div>\r\n        <div class=\"icon remove\">\r\n            <msda-icon\r\n                name=\"cancel_circle\"\r\n                width=\"18\"\r\n                height=\"18\"\r\n                color=\"gray\"\r\n                (click)=\"onRemove($event)\">\r\n            </msda-icon>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                        styles: [".icon-label{width:100%;min-width:163px;padding:6px 9px;background:#fff;border:1px solid #e0e0e0;box-sizing:border-box;border-radius:16px;cursor:pointer}.icon-label .icon-label-content{display:flex;align-items:center;justify-content:space-between}.icon-label .icon-label-content .icon msda-icon{display:flex;vertical-align:middle}.icon-label .icon-label-content .icon.remove{cursor:pointer}.icon-label .icon-label-content .text{margin:0 9px;font-family:'BPG DejaVu Sans';font-size:11px;letter-spacing:.01em}"]
                    }] }
        ];
        /** @nocollapse */
        IconLabelComponent.ctorParameters = function () { return []; };
        IconLabelComponent.propDecorators = {
            icon: [{ type: core.Input }],
            color: [{ type: core.Input }],
            text: [{ type: core.Input }],
            click: [{ type: core.Output }],
            remove: [{ type: core.Output }]
        };
        return IconLabelComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var AngularMsdaModule = /** @class */ (function () {
        function AngularMsdaModule() {
        }
        AngularMsdaModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            // msda components
                            MSDAIcon,
                            MSDAPlateIcon,
                            MSDACardButton,
                            MSDACardButtonsContainer,
                            MSDABannerButton,
                            MSDAPaginator,
                            MSDAMenuButton,
                            MSDAToast,
                            ButtonComponent,
                            ModuleCardComponent,
                            IconLabelComponent
                        ],
                        imports: [
                            common.CommonModule,
                            forms.FormsModule,
                            MatModule
                        ],
                        exports: [
                            // msda components
                            MSDAIcon,
                            MSDAPlateIcon,
                            MSDACardButton,
                            MSDACardButtonsContainer,
                            MSDABannerButton,
                            MSDAPaginator,
                            MSDAMenuButton,
                            MSDAToast,
                            ButtonComponent,
                            ModuleCardComponent,
                            IconLabelComponent
                        ],
                        entryComponents: [
                            MSDAToast
                        ],
                        providers: [
                            MSDAToastService
                        ]
                    },] }
        ];
        return AngularMsdaModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    exports.AngularMsdaModule = AngularMsdaModule;
    exports.ɵe = MSDABannerButton;
    exports.ɵi = ButtonComponent;
    exports.ɵc = MSDACardButton;
    exports.ɵd = MSDACardButtonsContainer;
    exports.ɵk = IconLabelComponent;
    exports.ɵa = MSDAIcon;
    exports.ɵl = MatModule;
    exports.ɵg = MSDAMenuButton;
    exports.ɵj = ModuleCardComponent;
    exports.ɵf = MSDAPaginator;
    exports.ɵb = MSDAPlateIcon;
    exports.ɵh = MSDAToast;
    exports.ɵm = MSDAToastService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,