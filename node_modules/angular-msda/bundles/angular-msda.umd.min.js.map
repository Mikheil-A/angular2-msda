{"version":3,"sources":["ng://angular-msda/lib/mat.module.ts","ng://angular-msda/lib/icon/icon.ts","ng://angular-msda/lib/plate-icon/plate-icon.ts","ng://angular-msda/lib/card-button/card-button.ts","ng://angular-msda/lib/card-button/card-buttons-container.ts","ng://angular-msda/lib/banner-button/banner-button.ts","ng://angular-msda/lib/paginator/paginator.ts","ng://angular-msda/lib/menu-button/menu-button.ts","ng://angular-msda/lib/button/button.component.ts","ng://angular-msda/lib/toast/toast.ts","node_modules/tslib/tslib.es6.js","ng://angular-msda/lib/toast/toast.service.ts","ng://angular-msda/lib/module-card/module-card.component.ts","ng://angular-msda/lib/icon-label/icon-label.component.ts","ng://angular-msda/lib/angular-msda.module.ts"],"names":["MatModule","NgModule","args","imports","CommonModule","MatButtonModule","MatInputModule","MatIconModule","MatExpansionModule","MatSelectModule","MatTableModule","MatPaginatorModule","MatSortModule","MatSlideToggleModule","MatDialogModule","MatSidenavModule","MatCheckboxModule","MatStepperModule","MatDatepickerModule","MatNativeDateModule","MatChipsModule","MatTooltipModule","MatMenuModule","MatProgressBarModule","declarations","exports","MSDAIcon","_elementRef","this","_width","_height","_color","_shadowLevel","Object","defineProperty","prototype","value","_name","_updateName","_updateWidth","_updateHeight","_updateColor","_updateShadow","ngOnInit","_useElementRef","nativeElement","setAttribute","style","width","_svgElementRef","toString","height","Component","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","role","class","exportAs","ElementRef","Input","ViewChild","MSDAPlateIcon","_background","_shadow","_updateBackground","_type","_updateType","_iconRef","name","_wrapperRef","_backgroundRef","color","shadow","MSDACardButton","icon","iconType","iconColor","iconBackgroundColor","draggable","buttonClick","EventEmitter","hostClick","e","emit","moveHandlerClick","stopPropagation","(click)","Output","MSDACardButtonsContainer","_el","row","column","dragEnabled","dataSource","sortupdate","repeat","trim","ngAfterViewInit","_this","jQuery","sortable","handle","bind","event","ui","MSDABannerButton","readMoreText","MSDAPaginator","page","pageConfigChange","currentPageIndex","_pageEventData","pageIndex","pageSize","ngOnChanges","numberOfTotalPages","Math","ceil","totalItems","itemsPerPage","itemsPerPageConfig","nextPage","previousPage","moveToTheRequestedPage","onSelectionChange","parseInt","srcElement","MSDAMenuButton","click","onClick","next","ButtonComponent","type","disabled","MSDAToast","linkClick","classList","contains","HostListener","__assign","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","apply","MSDAToastConfig","onClose","closeAfter","MSDAToastService","componentFactoryResolver","appRef","injector","showHtml","html","userConfig","config","_componentRef","resolveComponentFactory","create","instance","subscribe","dismiss","unsubscribe","detachView","hostView","destroy","attachView","domElem","rootNodes","document","body","appendChild","setTimeout","Injectable","ComponentFactoryResolver","ApplicationRef","Injector","ModuleCardComponent","remove","flip","onRemove","toggleFlip","onMouseEnter","$event","isHovered","flipBack","onMouseLeave","animations","trigger","state","transform","transition","animate","IconLabelComponent","AngularMsdaModule","FormsModule","entryComponents","providers"],"mappings":"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","sourcesContent":["// Core modules\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n// Angular-material components modules\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        // core modules\r\n        CommonModule,\r\n\r\n        // angular-material components modules\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatExpansionModule,\r\n        MatSelectModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatSlideToggleModule,\r\n        MatDialogModule,\r\n        MatSidenavModule,\r\n        MatCheckboxModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatChipsModule,\r\n        MatTooltipModule,\r\n        MatMenuModule,\r\n        MatProgressBarModule\r\n    ],\r\n    declarations: [],\r\n    exports: [\r\n        // core modules\r\n        CommonModule,\r\n\r\n        // angular-material components modules\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatExpansionModule,\r\n        MatSelectModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatSlideToggleModule,\r\n        MatDialogModule,\r\n        MatSidenavModule,\r\n        MatCheckboxModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatChipsModule,\r\n        MatTooltipModule,\r\n        MatMenuModule,\r\n        MatProgressBarModule\r\n    ]\r\n})\r\nexport class MatModule {\r\n}\r\n","import {Component, OnInit, Input, ViewEncapsulation, ElementRef, ViewChild, SimpleChanges, ChangeDetectionStrategy} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'msda-icon',\r\n    templateUrl: './icon.html',\r\n    styleUrls: ['./icon.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {\r\n        'role': 'img',\r\n        'class': 'msda-icon'\r\n    },\r\n    exportAs: 'MSDAIcon',\r\n})\r\nexport class MSDAIcon implements OnInit {\r\n\r\n    @Input('name')\r\n    set name(value: string) {\r\n        this._name = value;\r\n        this._updateName();\r\n    }\r\n\r\n    @Input('width')\r\n    set width(value: number) {\r\n        this._width = value;\r\n        this._updateWidth();\r\n    }\r\n\r\n    @Input('height')\r\n    set height(value: number) {\r\n        this._height = value;\r\n        this._updateHeight();\r\n    }\r\n\r\n    @Input('color')\r\n    set color(value: string) {\r\n        this._color = value;\r\n        this._updateColor();\r\n    }\r\n\r\n    @Input('shadow')\r\n    set shadow(value: number) {\r\n        this._shadowLevel = value;\r\n        this._updateShadow();\r\n    }\r\n\r\n    @ViewChild('svg')\r\n    private _svgElementRef: ElementRef<HTMLElement>;\r\n\r\n    @ViewChild('use')\r\n    private _useElementRef: ElementRef<HTMLElement>;\r\n\r\n    private _name: string;\r\n    private _width: number = 24;\r\n    private _height: number = 24;\r\n    private _color: string = '#000000';\r\n    private _shadowLevel: number = null;\r\n\r\n    constructor(private _elementRef: ElementRef<HTMLElement>) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._updateName();\r\n        this._updateWidth();\r\n        this._updateHeight();\r\n        this._updateColor();\r\n        this._updateShadow();\r\n    }\r\n\r\n    private _updateName(): void {\r\n        if (this._name) {\r\n            this._useElementRef.nativeElement.setAttribute('href', `../../assets/icons.svg#${this._name}`); // FIXME\r\n        }\r\n    }\r\n\r\n    private _updateWidth(): void {\r\n        if (this._width) {\r\n            this._elementRef.nativeElement.style.width = `${this._width}px`;\r\n            this._svgElementRef.nativeElement.setAttribute('width', this._width.toString());\r\n        }\r\n    }\r\n\r\n    private _updateHeight(): void {\r\n        if (this._height) {\r\n            this._elementRef.nativeElement.style.height = `${this._height}px`;\r\n            this._svgElementRef.nativeElement.setAttribute('height', this._height.toString());\r\n        }\r\n    }\r\n\r\n    private _updateColor(): void {\r\n        if (this._color) {\r\n            this._elementRef.nativeElement.style.height = `${this._height}px`;\r\n            this._svgElementRef.nativeElement.setAttribute('fill', this._color);\r\n        }\r\n    }\r\n\r\n    private _updateShadow(): void {\r\n        if (this._shadowLevel) {\r\n            this._svgElementRef.nativeElement.setAttribute('class', `msda-shadow-${this._shadowLevel}`);\r\n        }\r\n    }\r\n}\r\n","import {Component, OnInit, Input, ViewEncapsulation, ElementRef, ViewChild, SimpleChanges, ChangeDetectionStrategy} from '@angular/core';\r\nimport {MSDAIcon} from '../icon/icon';\r\n\r\n@Component({\r\n    selector: 'msda-plate-icon',\r\n    templateUrl: './plate-icon.html',\r\n    styleUrls: ['./plate-icon.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {\r\n        'role': 'img',\r\n        'class': 'msda-plate-icon'\r\n    },\r\n    exportAs: 'MSDAPlateIcon',\r\n})\r\nexport class MSDAPlateIcon implements OnInit {\r\n\r\n    @Input('name')\r\n    set name(value: string) {\r\n        this._name = value;\r\n        this._updateName();\r\n    }\r\n\r\n    @Input('width')\r\n    set width(value: number) {\r\n        this._width = value;\r\n        this._updateWidth();\r\n    }\r\n\r\n    @Input('height')\r\n    set height(value: number) {\r\n        this._height = value;\r\n        this._updateHeight();\r\n    }\r\n\r\n    @Input('color')\r\n    set color(value: string) {\r\n        this._color = value;\r\n        this._updateColor();\r\n    }\r\n\r\n    @Input('background')\r\n    set background(value: string) {\r\n        this._background = value;\r\n        this._updateBackground();\r\n    }\r\n\r\n    @Input('shadow')\r\n    set shadow(value: number) {\r\n        this._shadow = value;\r\n        this._updateShadow();\r\n    }\r\n\r\n    @Input('type')\r\n    set type(value: string) {\r\n        this._type = value;\r\n        this._updateType();\r\n    }\r\n\r\n    @ViewChild('wrapper')\r\n    private _wrapperRef: ElementRef<HTMLElement>;\r\n\r\n    @ViewChild('background')\r\n    private _backgroundRef: MSDAIcon;\r\n\r\n    @ViewChild('icon')\r\n    private _iconRef: MSDAIcon;\r\n\r\n    private _name: string;\r\n    private _width: number = 24;\r\n    private _height: number = 24;\r\n    private _color: string = '#FFFFFF';\r\n    private _background: string = '#EA854D';\r\n    private _shadow: number = null;\r\n    private _type: string;\r\n\r\n    constructor(private _elementRef: ElementRef<HTMLElement>) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._updateName();\r\n        this._updateWidth();\r\n        this._updateHeight();\r\n        this._updateColor();\r\n        this._updateBackground();\r\n        this._updateShadow();\r\n        this._updateType();\r\n    }\r\n\r\n    private _updateName(): void {\r\n        if (this._name) {\r\n            this._iconRef.name = this._name;\r\n        }\r\n    }\r\n\r\n    private _updateWidth(): void {\r\n        if (this._width) {\r\n            this._wrapperRef.nativeElement.style.width = this._width + 'px';\r\n            this._backgroundRef.width = this._width;\r\n            this._iconRef.width = this._width - (this._width / 3);\r\n        }\r\n    }\r\n\r\n    private _updateHeight(): void {\r\n        if (this._height) {\r\n            this._wrapperRef.nativeElement.style.height = this._height + 'px';\r\n            this._backgroundRef.height = this._height;\r\n            this._iconRef.height = this._height - (this._height / 3);\r\n        }\r\n    }\r\n\r\n    private _updateColor(): void {\r\n        if (this._color) {\r\n            this._iconRef.color = this._color;\r\n        }\r\n    }\r\n\r\n    private _updateBackground(): void {\r\n        if (this._background) {\r\n            this._backgroundRef.color = this._background;\r\n        }\r\n    }\r\n\r\n    private _updateShadow(): void {\r\n        if (this._shadow) {\r\n            this._backgroundRef.shadow = this._shadow;\r\n        }\r\n    }\r\n\r\n    private _updateType(): void {\r\n        if (this._type) {\r\n            this._backgroundRef.name = this._type;\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n    Input,\r\n    Output,\r\n    Component,\r\n    ViewEncapsulation,\r\n    ChangeDetectionStrategy,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'msda-card-button',\r\n    exportAs: 'MSDACardButton',\r\n    templateUrl: './card-button.html',\r\n    styleUrls: ['./card-button.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {\r\n        'class': 'msda-card-button',\r\n        '(click)': 'hostClick($event)'\r\n    }\r\n})\r\nexport class MSDACardButton {\r\n\r\n    @Input() title: string;\r\n    @Input() text: string;\r\n\r\n    @Input() icon: string = 'icon-4';\r\n    @Input() iconType: string = 'square';\r\n    @Input() iconColor: string = '#FFFFFF';\r\n    @Input() iconBackgroundColor: string = '#EA854D';\r\n\r\n    @Input() draggable: boolean = true;\r\n\r\n    @Output() buttonClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    hostClick(e: Event) {\r\n        this.buttonClick.emit(e);\r\n    }\r\n\r\n    moveHandlerClick(e: Event) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n}\r\n","import {\r\n    Input,\r\n    Output,\r\n    Component,\r\n    ViewEncapsulation,\r\n    ChangeDetectionStrategy,\r\n    EventEmitter,\r\n    ElementRef,\r\n    AfterViewInit\r\n} from '@angular/core';\r\n\r\ndeclare const jQuery: any;\r\n\r\n@Component({\r\n    selector: 'msda-card-buttons-container',\r\n    exportAs: 'MSDACardButtonsContainer',\r\n    templateUrl: './card-buttons-container.html',\r\n    styleUrls: ['./card-buttons-container.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {\r\n        'role': 'button',\r\n        'class': 'msda-card-buttons-container'\r\n    }\r\n})\r\nexport class MSDACardButtonsContainer implements AfterViewInit {\r\n\r\n    @Input() row: number = 3;\r\n    @Input() column: number = 3;\r\n\r\n    @Input() dragEnabled: boolean = false;\r\n\r\n    @Input() dataSource: any = [];\r\n\r\n    @Output() sortupdate: EventEmitter<any> = new EventEmitter();\r\n    @Output() buttonClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(private _el: ElementRef) { }\r\n\r\n    get gridTemplateColumns() {\r\n        return '1fr '.repeat(this.column).trim();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.dragEnabled) {\r\n            jQuery('.msda-card-buttons-container-inner', this._el.nativeElement).sortable({\r\n                handle: '.msda-card-button-move-handler'\r\n            }).bind('sortupdate', (event, ui) => {\r\n                this.sortupdate.emit({ event, ui });\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n    Input,\r\n    Output,\r\n    Component,\r\n    ViewEncapsulation,\r\n    ChangeDetectionStrategy,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'msda-banner-button',\r\n    exportAs: 'MSDABannerButton',\r\n    templateUrl: './banner-button.html',\r\n    styleUrls: ['./banner-button.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: { 'class': 'msda-banner-button msda-body-2' }\r\n})\r\nexport class MSDABannerButton {\r\n\r\n    /**\r\n     * Icon name\r\n     */\r\n    @Input() icon: string;\r\n\r\n    /**\r\n     * Image URL\r\n     */\r\n    @Input() image: string;\r\n\r\n    /**\r\n     * Banner title\r\n     */\r\n    @Input() title: string;\r\n\r\n    /**\r\n     * Image text\r\n     */\r\n    @Input() text: string;\r\n\r\n    /**\r\n     * Date string\r\n     */\r\n    @Input() date: string;\r\n\r\n    /**\r\n     * Icon and \"read more\" text color\r\n     */\r\n    @Input() color: string;\r\n\r\n    /**\r\n     * Read more text\r\n     */\r\n    @Input() readMoreText: string = 'áá áªááá ...';\r\n\r\n    /**\r\n     * Button click event emitter\r\n     */\r\n    @Output() buttonClick: EventEmitter<any> = new EventEmitter();\r\n\r\n}\r\n","import {Component, EventEmitter, Input, OnChanges, Output} from '@angular/core';\r\n\r\n\r\n@Component({\r\n    selector: 'msda-paginator',\r\n    exportAs: 'MSDAPaginator',\r\n    templateUrl: './paginator.html',\r\n    styleUrls: ['./paginator.scss']\r\n})\r\nexport class MSDAPaginator implements OnChanges {\r\n    @Input() itemsPerPage: number;\r\n    @Input() totalItems: number;\r\n    @Input() itemsPerPageConfig: number[];\r\n\r\n    @Output() page: EventEmitter<any> = new EventEmitter();\r\n    @Output() pageConfigChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    currentPageIndex: number = 1;\r\n    numberOfTotalPages: number;\r\n\r\n    private _pageEventData: object = {\r\n        pageIndex: this.currentPageIndex,\r\n        pageSize: null\r\n    };\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.numberOfTotalPages = Math.ceil(this.totalItems / this.itemsPerPage);\r\n        this._pageEventData['pageSize'] = this.itemsPerPageConfig[0];\r\n    }\r\n\r\n\r\n    nextPage() {\r\n        if (this.currentPageIndex < this.numberOfTotalPages) {\r\n            this._pageEventData['pageIndex'] = ++this.currentPageIndex;\r\n            this.page.emit(this._pageEventData);\r\n        }\r\n    }\r\n\r\n    previousPage() {\r\n        if (this.currentPageIndex > 1) {\r\n            this._pageEventData['pageIndex'] = --this.currentPageIndex;\r\n            this.page.emit(this._pageEventData);\r\n        }\r\n    }\r\n\r\n    moveToTheRequestedPage() {\r\n        if (this.currentPageIndex >= 1 && this.currentPageIndex <= this.numberOfTotalPages) {\r\n            this._pageEventData['pageIndex'] = this.currentPageIndex;\r\n            this.page.emit(this._pageEventData);\r\n        }\r\n    }\r\n\r\n    onSelectionChange(e: Event) {\r\n        this.itemsPerPage = parseInt(e.srcElement['value'], 10);\r\n        this._pageEventData['pageSize'] = this.itemsPerPage;\r\n\r\n        this.numberOfTotalPages = Math.ceil(this.totalItems / this.itemsPerPage);\r\n\r\n        this.page.emit(this._pageEventData);\r\n        this.pageConfigChange.emit(this.itemsPerPage);\r\n    }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'msda-menu-button',\r\n    exportAs: 'MSDAMenuButton',\r\n    templateUrl: './menu-button.html',\r\n    styleUrls: ['./menu-button.scss']\r\n})\r\n\r\nexport class MSDAMenuButton {\r\n\r\n    @Input('active') active: boolean;\r\n    @Input('text') text: string;\r\n    @Input('notifCounter') notifCounter: number;\r\n\r\n    @Output() click: EventEmitter<any> = new EventEmitter();\r\n\r\n    onClick(e: Event) {\r\n        event.stopPropagation();\r\n        this.click.next(e);\r\n    }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'msda-button',\r\n    templateUrl: './button.component.html',\r\n    styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n    @Input() type = 'button';\r\n    @Input() color: string;\r\n    @Input() disabled = false;\r\n    @Input() public showLoading: Boolean;\r\n\r\n\r\n    @Output() click: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onClick(e: Event) {\r\n        e.stopPropagation();\r\n        this.click.emit(e);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ViewEncapsulation,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    HostListener\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'msda-toast',\r\n    templateUrl: './toast.html',\r\n    styleUrls: ['./toast.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    exportAs: 'MSDAToas',\r\n})\r\nexport class MSDAToast {\r\n\r\n    @Input() html: string;\r\n    @Input() dismiss: () => void;\r\n\r\n    @Output() linkClick: EventEmitter<Event> = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    @HostListener('click', ['$event']) click(e: Event) {\r\n        if ((<HTMLElement>e.target).classList.contains('msda-link')) this.linkClick.emit(e);\r\n    }\r\n\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\r\n    Injectable,\r\n    Injector,\r\n    ComponentFactoryResolver,\r\n    EmbeddedViewRef,\r\n    ApplicationRef,\r\n    ComponentRef\r\n} from '@angular/core';\r\n\r\nimport { MSDAToast } from './toast';\r\n\r\nexport class MSDAToastConfig {\r\n    onClose?= () => { };\r\n    linkClick?= (e: Event) => { };\r\n    closeAfter?= 3000;\r\n};\r\n\r\n@Injectable()\r\nexport class MSDAToastService {\r\n\r\n    private _componentRef: ComponentRef<MSDAToast>;\r\n\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private appRef: ApplicationRef,\r\n        private injector: Injector\r\n    ) { }\r\n\r\n    showHtml(html: string, userConfig?: MSDAToastConfig) {\r\n        const config = { ...new MSDAToastConfig(), ...userConfig };\r\n\r\n        // 1. Create a component reference from the component\r\n        this._componentRef = this.componentFactoryResolver\r\n            .resolveComponentFactory(MSDAToast)\r\n            .create(this.injector);\r\n\r\n        this._componentRef.instance.html = html;\r\n        this._componentRef.instance.linkClick.subscribe((e: Event) => config.linkClick(e));\r\n        this._componentRef.instance.dismiss = () => {\r\n            this._componentRef.instance.linkClick.unsubscribe();\r\n            this.appRef.detachView(this._componentRef.hostView);\r\n            this._componentRef.destroy();\r\n            config.onClose();\r\n        };\r\n\r\n        // 2. Attach component to the appRef so that it's inside the ng component tree\r\n        this.appRef.attachView(this._componentRef.hostView);\r\n\r\n        // 3. Get DOM element from component\r\n        const domElem = (this._componentRef.hostView as EmbeddedViewRef<any>)\r\n            .rootNodes[0] as HTMLElement;\r\n\r\n        // 4. Append DOM element to the body\r\n        document.body.appendChild(domElem);\r\n\r\n        // 5. Wait some time and remove it from the component tree and from the DOM\r\n        setTimeout(() => this._componentRef.instance.dismiss(), config.closeAfter);\r\n    }\r\n\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'msda-module-card',\r\n    templateUrl: './module-card.component.html',\r\n    styleUrls: ['./module-card.component.scss'],\r\n    animations: [\r\n        trigger('flipState', [\r\n            state('active', style({\r\n                transform: 'rotateX(180deg)'\r\n            })),\r\n            state('inactive', style({\r\n                transform: 'rotateX(0)',\r\n            })),\r\n            transition('active => inactive', animate('500ms ease-out')),\r\n            transition('inactive => active', animate('500ms ease-in'))\r\n        ])\r\n    ]\r\n})\r\nexport class ModuleCardComponent implements OnInit {\r\n    /**\r\n     * Icon name\r\n     */\r\n    @Input() icon: string;\r\n\r\n    /**\r\n     * Icon color\r\n     */\r\n    @Input() color: string;\r\n\r\n    /**\r\n     * title\r\n     */\r\n    @Input() title: string;\r\n\r\n    /**\r\n     * warning\r\n     */\r\n    @Input() warn: Boolean;\r\n\r\n    /**\r\n     * card click event emitter\r\n     */\r\n    @Output() click: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * remove icon click event emitter\r\n     */\r\n    @Output() remove: EventEmitter<any> = new EventEmitter();\r\n\r\n    flip: string = 'inactive';\r\n    isHovered: boolean;\r\n\r\n    constructor() {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onClick(e: Event) {\r\n        e.stopPropagation();\r\n        this.click.emit(e);\r\n    }\r\n\r\n    onRemove(e: Event) {\r\n        e.stopPropagation();\r\n        this.remove.emit(e);\r\n    }\r\n\r\n    toggleFlip(e: Event) {\r\n        e.stopPropagation();\r\n        this.flip = (this.flip == 'inactive') ? 'active' : 'inactive';\r\n    }\r\n\r\n    onMouseEnter($event) {\r\n        this.isHovered = true;\r\n        this.flipBack();\r\n    }\r\n\r\n    onMouseLeave($event) {\r\n        this.isHovered = false;\r\n        this.flipBack();\r\n    }\r\n\r\n    flipBack() {\r\n        setTimeout(() => {\r\n            if (!this.isHovered) {\r\n                this.flip = 'inactive';\r\n            }\r\n        }, 1000);\r\n    }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'msda-icon-label',\r\n    templateUrl: './icon-label.component.html',\r\n    styleUrls: ['./icon-label.component.scss']\r\n})\r\nexport class IconLabelComponent implements OnInit {\r\n    /**\r\n     * Icon name\r\n     */\r\n    @Input() icon: string;\r\n\r\n    /**\r\n     * Color\r\n     */\r\n    @Input() color: string;\r\n\r\n    /**\r\n     * text\r\n     */\r\n    @Input() text: string;\r\n\r\n    /**\r\n     * click event emitter\r\n     */\r\n    @Output() click: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * remove icon click event emitter\r\n     */\r\n    @Output() remove: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onClick(e: Event) {\r\n        e.stopPropagation();\r\n        this.click.emit(e);\r\n    }\r\n\r\n    onRemove(e: Event) {\r\n        e.stopPropagation();\r\n        this.remove.emit(e);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n// Angular Material module\r\nimport {MatModule} from './mat.module';\r\n\r\n// msda components\r\nimport {MSDAIcon} from './icon/icon';\r\nimport {MSDAPlateIcon} from './plate-icon/plate-icon';\r\nimport {MSDACardButton} from './card-button/card-button';\r\nimport {MSDACardButtonsContainer} from './card-button/card-buttons-container';\r\nimport {MSDABannerButton} from './banner-button/banner-button';\r\nimport {MSDAPaginator} from './paginator/paginator';\r\nimport {MSDAMenuButton} from './menu-button/menu-button';\r\nimport {ButtonComponent} from './button/button.component';\r\nimport {MSDAToast} from './toast/toast';\r\nimport {MSDAToastService} from './toast/toast.service';\r\nimport {ModuleCardComponent} from './module-card/module-card.component';\r\nimport {IconLabelComponent} from './icon-label/icon-label.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        // msda components\r\n        MSDAIcon,\r\n        MSDAPlateIcon,\r\n        MSDACardButton,\r\n        MSDACardButtonsContainer,\r\n        MSDABannerButton,\r\n        MSDAPaginator,\r\n        MSDAMenuButton,\r\n        MSDAToast,\r\n        ButtonComponent,\r\n        ModuleCardComponent,\r\n        IconLabelComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n\r\n        MatModule\r\n    ],\r\n    exports: [\r\n        // msda components\r\n        MSDAIcon,\r\n        MSDAPlateIcon,\r\n        MSDACardButton,\r\n        MSDACardButtonsContainer,\r\n        MSDABannerButton,\r\n        MSDAPaginator,\r\n        MSDAMenuButton,\r\n        MSDAToast,\r\n        ButtonComponent,\r\n        ModuleCardComponent,\r\n        IconLabelComponent\r\n    ],\r\n    entryComponents: [\r\n        MSDAToast\r\n    ],\r\n    providers: [\r\n        MSDAToastService\r\n    ]\r\n})\r\nexport class AngularMsdaModule {\r\n}\r\n"]}